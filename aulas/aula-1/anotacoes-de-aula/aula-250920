Aula 20/09
- Banco de dados
	Banco de dados relacional: garante segurança, facilidade no uso, relação entre tabelas, consistência, integridade, suporte robusto a transações, mas é pouco flexível com dados não estruturados.
	Caso de uso: ERPS, bancos, e-commerces...
	Utilizar o PostgreSQL. (open-source)
	Estrutura fundamental: 
		Tabela: conjunto de dados
		Registro/Linha: uma linha com os dads
		Campo/Coluna: uma categoria de informações
	Chaves e Relacionamentos:
		Chave primária é um identificador único;
		Chave estrangeira é que faz ligação entre tabelas; (é o conjunto de chaves primárias de outras tabelas)
	Índices:
		Estrutura que auxilia a ter buscar mais rápidas, funciona como índices de um livro físico, de certa forma;
		Utilizar marcadores para agilizar a busca;
	Tipos de dados essências
		- VARCHAR(n): texto com limite de caracteres;
			n é o número de caracteres (IMPORTANTE SABER O LIMITE PARA NÃO GASTAR DADOS DESNECESSÁRIOS)
		- INTEGER: números inteiros;
		- BOOLEAN: verdadeiro/falso
		- SERIAL: números sequenciais automáticos;
	Restrições(Constraints)
		- NOT NULL: campo obrigatório;
		- UNIQUE: valor único na tabela;
		- CHECK: validação personalizada (se for email verificar se tem @, etc)
		- PRIMARY KEY:

	Estrutura básica
		SELECT colunas
		FROM tabela
		WHERE condição
		ORDER BY coluna;
	
	Comando DDL para definir/criar um banco de dados.
	CREATE TABLE alunos (
		id_aluno SERIAL PRIMARY KEY,
		nome VARCHAR(100) NOT NULL,
		idade INTEGER CHECK (idade >= 0),
		email VARCHAR(15) UNIQUE,
		data cadastro DATE DEFAULT CURRENT_DATE
	);

	ALTER TABLE alunos ADD COLUMN telefone VARCHAR(15);

	DROP TABLE alunos;

	Comandos DML para manipular os dados;
		INSERT INTO alunos (nome, idade, email)
		VALUES	('João Silva', 20, 'joao@email.com');
		
		SELECT * FROM alunos;
		
		UPDATE alunos
		SET idade = 21
		WHERE nome = 'Joao Silva';
		
		DELETE FROM alunos
		WHERE idade < 18;

	As quatro operações: PUT, GET, PUT/PATCH E DELETE;
	*put é para atualizar vários dados. Para atualizar apenas um recurso, usar o patch.
	
	Boa prática: 
	- Separar nome e sobrenome em campos separados e normalizado/organizado;
	- Idade seria melhor ser em data de nascimento;
	- Colocar as regras de negócio já na construção do banco de dados;
	- Cada decisão tomada certificar que aquilo vá durar um tempo;
	
